version: "3"
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  luckperms:
    image: ghcr.io/luckperms/rest-api
    # Uncomment if your database is running on the same host
    #extra_hosts:
    #  - "database:host-gateway"
    environment:
      LUCKPERMS_STORAGE_METHOD: postgresql
      LUCKPERMS_DATA_ADDRESS: database:5432
      LUCKPERMS_DATA_DATABASE: minecraft
      LUCKPERMS_DATA_USERNAME: username
      LUCKPERMS_DATA_PASSWORD: passw0rd

      # configure the REST API
      # https://github.com/LuckPerms/rest-api#configuration
      LUCKPERMS_REST_HTTP_PORT: 8080
      LUCKPERMS_REST_AUTH: false
    networks:
      - app-network
    ports:
      #- 8080:8080
      - 3001:3001

  database:
    # Official Postgres image from DockerHub (we use the last version)
    image: 'postgres:17'

    # By default, a Postgres database is running on the 5432 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.
    ports:
      #- 5432:5432

    environment:
      POSTGRES_USER: username # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: passw0rd # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: minecraft # The PostgreSQL default database (automatically created at first launch)
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

